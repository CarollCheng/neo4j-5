# version must be a string
# note: '3' here means '3.0'
version: '3.8'

services:
  # filesys:
  #   container_name: filesys
  #   build: ../services/filesys # see Dockerfile in this folder
  #   ports:
  #     - '4441:4441'
  #   profiles:
  #     - all
  #     - filesys
  #   # volumes:
  #   #   - ../$SETUP:/data/setup # has setup.yaml etc
  #   #   - ../modules:/data/modules # has module yamls
  #   #   - ../$SETUP/volumes/adapter:/data/adapter # has json cookies for backfilling
  #   restart: always
  #   networks:
  #     - neomem

  neo4j:
    container_name: neo4j
    image: neo4j:4.4.4-community
    ports:
      - '7474:7474'
      - '7687:7687'
    profiles:
      - all
      - neo4j
    volumes:
      - ../setups/test/volumes/neo4j:/data
    restart: always
    networks:
      - neomem

  postgres:
    container_name: postgres
    image: timescale/timescaledb:2.3.0-pg13
    ports:
      - $PGPORT:5432/tcp
    profiles:
      - all
      - postgres
    #. don't use PGPASSWORD - see https://stackoverflow.com/a/6405162/243392
    # https://www.postgresql.org/docs/9.1/libpq-pgpass.html
    environment:
      POSTGRES_DB: $PGDATABASE
      POSTGRES_USERNAME: $PGUSER
      POSTGRES_PASSWORD: $PGPASSWORD
    volumes:
      - ../$SETUP/volumes/postgres/data:/var/lib/postgresql/data
    restart: always
    networks:
      - neomem

  stardog:
    container_name: stardog
    image: stardog/stardog:latest
    ports:
      - '5820:5820'
    profiles:
      - all
      - stardog
    volumes:
      - ../setups/test/volumes/stardog:/var/opt/stardog
    restart: always
    networks:
      - neomem

  stardog-studio:
    container_name: stardog-studio
    image: stardog/stardog-studio:current
    ports:
      - '8888:8080'
    profiles:
      - all
      - stardog-studio
    restart: always
    networks:
      - neomem

networks:
  neomem:
    name: neomem
